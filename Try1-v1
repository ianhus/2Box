#################################################
###############  LoxTry 1: 2-Box  ###############
#### After Meselhe, Arceneaux, Waldon (2010) ####
#################################################

## 1-8C used to calibrate Canal; avg of 1-7 and 1-9 used for Marsh ##
## StgC values below 4.27m were adjusted up to 4.27m               ##
## Most sensitive parameter was ET reduction depth                 ##
## When dStgC/dt > 0.1, the "extra water was routed to the Marsh   ##

# Read in inflows and outflows #
Qin = as.matrix(read.csv("2box_inflow.csv"))      #[cfs]
Qout = as.matrix(read.csv("2box_outflow.csv"))    #[cfs]
P = as.matrix(read.csv("rain_WCA1ME.csv"))        #[inches]
ET = as.matrix(read.csv("ET_STA1W.csv"))          #[mm]
cal = as.matrix(read.csv("stage_cal.csv"))        #[m]
marsh = cal[,1]; canal = cal[,2]

# Define constants and parameters #
Ac = 996/640*1.62^2*1000^2       #Area of canal [m2] (given in acres, converted to m^2)
Am = 138325/640*1.62^2*1000^2    #Area of marsh [m2] (given in acres, converted to m^2)
E0 = 4.62     #Ground surface elevation of Marsh [m NGVD29]
StgC = NULL   #Setting up canal stage vector
StgM = NULL   #Setting up canal stage vector
StgC[1] = 5.20   #Initial stage in canal [m NGVD29]
StgM[1] = 5.16   #Initial stage in marsh [m NGVD29]
C = 1.88E9    #Canal/marsh water transport [m-1*d-1]
GC = 0.042    #Canal seepage constant [d-1] 
GM = 0.00013  #Marsh seepage constant [d-1] 
StgB = 3.5    #Boundary water surface elevation [m]
f.ET.min = 0.2 #Minimum ET reduction factor
H.ET = 0.25    #Depth at/below which ET is reduced [m] ; H = max(0,StgM-E0)
dC.max = 0.1   #max daily stage change for the Canal [m]

for (i in 1:365) {
  
  Qmc = (C*max(0,(StgM[i] - E0))^3*(StgC[i] - StgM[i]))
  
  if (StgM[i] - E0 < 0.25) {
    
    ET[i] = ET[i]*max(f.ET.min, min(1,(max(0,StgM[i] - E0))/H.ET))
    
  }
  
  dStgC = P[i]*0.0254 - ET[i]/1000 - GC*(StgC[i] - StgB) + (Qin[i] - Qout[i])*86400/35.3/Ac - Qmc/Ac
  
  if (abs(dStgC) > dC.max) {   #0.1m set as max daily stage change for Canal
    
    d.StgC = dStgC/abs(dStgC)*dC.max
    StgC[i+1] = StgC[i] + d.StgC
    
    Q.mc = (dStgC - d.StgC)*Ac
    dStgM = P[i]*0.0254 - ET[i]/1000 - GM*(StgM[i] - StgB) + Qmc/Am + Q.mc/Am
    StgM[i+1] = StgM[i] + dStgM
    
  } else {
  
  StgC[i+1] = StgC[i] + dStgC
  dStgM = P[i]*0.0254 - ET[i]/1000 - GM*(StgM[i] - StgB) + Qmc/Am
  StgM[i+1] = StgM[i] + dStgM
  
  }
}

plot(StgC, ylim = range(4,7))
lines(canal)
plot(StgM, ylim = range(4,7))
lines(marsh)
